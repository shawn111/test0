// Jenkins easystack avocado-vt iso level pipeline config
//
//  - https://jenkins.io/doc/book/pipeline/
//

pipeline {
    agent any
    parameters {
	booleanParam(defaultValue: false, name: 'overwrite', description: '')
        string(
            name: 'iso',
            defaultValue: "/srv/avocado/data/avocado-vt/isos/linux/escore.iso",
            description: 'iso path')
    }
    environment {
        TARGETFN = "/srv/avocado/data/avocado-vt/isos/linux/escore.iso"
        SOURCEFN = "${params.iso}"
        VPATH = """${sh(
                returnStdout: true,
                script: 'echo $PATH'
            )}"""
    }
    stages {
        stage("Prepare") {
            steps {
                script {
                    // copy tests into guest-os-escore.cfg
                    // envsubst for env variable replacement
                    sh "envsubst < escore-test-cfg/tests/iso.cfg >> .avocado-vt-cfg/Linux/ESCore/devel/x86_64.cfg"
                    sh "envsubst < escore-test-cfg/tests/kernel.cfg >> .avocado-vt-cfg/Linux/ESCore/devel/x86_64.cfg"

                    // cat escore-cfg for debug
                    sh "cat .avocado-vt-cfg/Linux/ESCore/devel/x86_64.cfg"

                    // to generate guest-os.cfg
                    // FIXME
                    // make sure /usr/share/avocado-plugins-vt/shared/cfg/guest-os/Linux group autotest could write
                    sh "cp -rfv .avocado-vt-cfg/Linux/* /usr/share/avocado-plugins-vt/shared/cfg/guest-os/Linux"
                    sh "avocado vt-bootstrap"

                    // list Linux.ESCore.devel.x86_64 tests
                    sh "avocado list --vt-type qemu --vt-guest-os Linux.ESCore.devel.x86_64 --paginator off --verbose"

                    env.VER = sh (
                        returnStdout: true,
                        script: 'isoinfo -d -i "$SOURCEFN" | awk -F": " \'/Volume id/{print $2}\''
                    ).trim()

                    env.VERFN = "/srv/avocado/data/avocado-vt/isos/linux/${env.VER}.iso"
                    ISOEXISTS = fileExists "${env.VERFN}"

                    env.TMD5SUM = sh (
                        returnStdout: true,
                        script: 'md5sum $TARGETFN'
                    ).trim()
                    env.SMD5SUM = sh (
                        returnStdout: true,
                        script: 'md5sum $SOURCEFN'
                    ).trim()

                    if (env.TMD5SUM != env.SMD5SUM) {
                        if (!ISOEXISTS || params.overwrite) {
                            sh "cp $SOURCEFN $VERFN"
                        }
                    }

                    sh "rm -rf $TARGETFN"
                    sh "ln -s $VERFN $TARGETFN"

                    EXISTS = fileExists "/srv/avocado/data/avocado-vt/images/${env.VER}.qcow2"
                    env.EXISTS = EXISTS
                    env.NEEDWRITE = !EXISTS || params.overwrite

                    if (env.NEEDWRITE == "true") {
                        // copy kernel/initrd
                        // escore-test-cfg/tests/iso.cfg
                        env.TMPDIR = sh (
                           returnStdout: true,
                           script: 'mktemp -d'
                        ).trim()
                        sh "ls -la $TMPDIR"
                        sh "guestmount -o nonempty -a $SOURCEFN -r -i $TMPDIR"
                        sh "mkdir -p /srv/avocado/data/avocado-vt/isos/isolinux"
                        sh "cp -f --update $TMPDIR/isolinux/* /srv/avocado/data/avocado-vt/isos/isolinux"
                        sh "guestunmount $TMPDIR"
                        sh "rm -rf $TMPDIR"
                    }

                    // escore-devel.ks
                    // make sure group writable /usr/share/avocado-plugins-vt/shared/unattended/escore-devel.ks
                    // touch /usr/share/avocado-plugins-vt/shared/unattended/escore-devel.ks
                    // chgrp autotest /usr/share/avocado-plugins-vt/shared/unattended/escore-devel.ks
                    // chmod 775 /usr/share/avocado-plugins-vt/shared/unattended/escore-devel.ks
                    sh "envsubst < escore-test-cfg/escore.ks  >> /usr/share/avocado-plugins-vt/shared/unattended/escore-devel.ks"
                }
            }
        }
        stage("Build") {
            steps {
                script {
                    echo "needwrite ${env.NEEDWRITE}"
                    if (env.NEEDWRITE == "true") {
                        sh "mv --force /srv/avocado/data/avocado-vt/images/escore.qcow2 /srv/avocado/data/avocado-vt/images/escore.qcow2.bak || echo 'file not found'"
                        sh "sudo avocado run --vt-guest-os Linux.ESCore.devel.x86_64 --show-job-log io-github-autotest-qemu.unattended_install.cdrom.extra_cdrom_ks.default_install.aio_native"
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    if (env.NEEDWRITE == "true") {
                        sh "mv /srv/avocado/data/avocado-vt/images/escore.qcow2 /srv/avocado/data/avocado-vt/images/${env.VER}.qcow2"
                        sh "ln -s ${env.VER}.qcow2 /srv/avocado/data/avocado-vt/images/escore.qcow2"
                        echo "Wrote"
                    }else{
                        echo "Don't overwrite"
                    }
                }
                echo "${env.PATH}"
                echo "${env.VER}"
                echo "${params.overwrite}"
            }
	}
    }
}
